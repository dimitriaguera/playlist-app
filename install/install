#!/usr/bin/env bash

######################## HELPERS

# colorize and formatting command line
green='\x1B[0;32m'
cyan='\x1B[1;36m'
blue='\x1B[0;34m'
grey='\x1B[1;30m'
red='\x1B[0;31m'
bold='\033[1m'
normal='\033[0m'

function say_green {
  echo -e "${green}${bold}$1${normal}"
}

## Ask Something With Choice
function ask_choice () {
  #XXX: FANCIER select ALTERNATIVE
  ## $1     : MESSAGE
  ## $2     : DEFAULT (AS INDEX IN $choices) IF USER PROVIDES AN EMPTY ANSWER
  ## $3-n   : CHOICES (WITH UNIQUE LEADING CHARACTER, E.G: "yes" "no" "abort")
  ## returns: 0, AND SETS $BOTASK_ANSWER TO THE ANSWER'S INDEX WITHIN $choices

  ## EASE OUR DEVS' LIFE
  [[ $2 =~ ^-?[0-9]+$ ]] || fatal_prog_error "'$2' IS NOT AN INTEGER";

  local msg="$1" def_choice=$2; shift 2
  local choices=($@)
  local prompt="$BP"
  BOTASK_ANSWER="$def_choice"             #XXX: ACCESS TO USER'S CHOICE
  for c in "$@"; do
    if [[ "$c" == "${choices[$def_choice]}" ]]; then
      prompt="$prompt${bold}[${c:0:1}]${c:1}${normal} "
    else
      prompt="$prompt[${c:0:1}]${c:1} "
    fi
  done

  while true; do
    echo -ne "$BP$B_AWAKE "
    say_green "$msg"
    echo " "
    echo -ne "$prompt> "
    read ans
    for (( i=0; i<=${#choices[@]}-1; i++ )); do
      test -z $ans && return 0            #TDL: PRESSING SPACE (RETURN OK)
      c=${choices[$i]}
      if [[ "$ans" == ${c:0:1} ]]; then
        echo
        BOTASK_ANSWER=$i && return 0      #XXX: set -e SO RETURN 0
      fi
    done
    echo -e "\r$BP$B_EMBRS"               ## USER MISTYPED: EMBARRASSMENT
  done
}
######################## END HELPERS

ask_choice "Install on Raspian or on Debian/Ubuntu ? " 0 Raspbian Debian/Ubuntu
if [[ $BOTASK_ANSWER == 0 ]]; then
  ./installRasp
else
  ./installDebian
fi
